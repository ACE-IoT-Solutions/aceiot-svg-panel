{"version":3,"sources":["../src/svg_ctrl.js"],"names":["MetricsPanelCtrl","_","kbn","TimeSeries","rendering","ace","DataFrame","PanelEvents","GrafanaJSCompleter","$lang_tools","$control","$panel","editor","session","pos","prefix","callback","getCursorPosition","line","getLine","row","substring","column","match","length","lastIndexOf","panelthis","evalObj","eval","evaluatePrefix","ctrl","svgnode","parentSVG","node","svgmap","svgElements","wordList","map","word","caption","value","meta","e","console","error","key","push","Array","isArray","SVGCtrl","$scope","$injector","$rootScope","panelDefaults","links","datasource","maxDataPoints","interval","targets","cacheTimeout","nullPointMode","aliasColors","format","svg_data","js_code","js_init_code","clickMapperEnabled","svgIdMappings","editorCompletion","svgBuilderData","width","height","viewport","x","y","elements","defaults","panel","dataFormat","events","on","render","onRender","bind","refresh","dataReceived","onDataReceived","dataError","onDataError","dataSnapshotLoad","editModeInitialized","onInitEditMode","initialized","editors","addEditorTab","unitFormats","getUnitFormats","aceLangTools","acequire","addCompleter","nodeId","setTimeout","$","edit","attr","setValue","getSession","val","getValue","setInitFunction","setHandleMetricFunction","err","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","theme","mode","showPrintMargin","resetSVG","readOnly","useSVGBuilder","svgIdMapping","i","svgId","splice","updateMappings","event","clicked","target","id","parentNode","$apply","currentTarget","file","files","reader","FileReader","onload","result","document","getElementsByClassName","onclick","svgClickHandler","subItem","data","series","color","alias","doInitUserFunction","handleMetricUserFunction","Function","handleMetric","doInit","isFunction","dataFrame","dataList","type","tableHandler","table","docsHandler","seriesHandler","seriesData","datapoints","flotpairs","getFlotPairs","tableData","columnNames","columns","text","rows","datapoint","forEach","columnIndex","aliasName","getSeriesIdByAlias","isNumber","decimals","scaledDecimals","delta","dec","Math","floor","log","LN10","magn","pow","norm","size","max","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","formatter","scope","elem","attrs","templateUrl"],"mappings":"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","file":"svg_ctrl.js","sourcesContent":["import { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport kbn from 'app/core/utils/kbn';\nimport TimeSeries from 'app/core/time_series';\nimport rendering from './rendering';\nimport ace from './node_modules/brace/index.js';\nimport './node_modules/brace/ext/language_tools.js';\nimport './node_modules/brace/theme/tomorrow_night_bright.js';\nimport './node_modules/brace/mode/javascript.js';\nimport './node_modules/brace/mode/svg.js';\nimport { DataFrame, PanelEvents } from '@grafana/data';\n\n\nclass GrafanaJSCompleter {\n    constructor($lang_tools, $control, $panel) {\n        this.$lang_tools = $lang_tools;\n        this.$control = $control;\n        this.$panel = $panel;\n    }\n\n    getCompletions(editor, session, pos, prefix, callback) {\n        try {\n            var pos = editor.getCursorPosition();\n            var line = editor.session.getLine(pos.row);\n\n            prefix = line.substring(0, pos.column).match(/this\\.\\S*/g);\n            if (prefix) {\n                prefix = prefix[prefix.length - 1];\n                prefix = prefix.substring(0, prefix.lastIndexOf('.'));\n\n                var panelthis = this.$panel;\n                var evalObj = eval('panel' + prefix);\n                this.evaluatePrefix(evalObj, callback);\n                return;\n            }\n\n            prefix = line.substring(0, pos.column).match(/ctrl\\.\\S*/g);\n            if (prefix) {\n                prefix = prefix[prefix.length - 1];\n                prefix = prefix.substring(0, prefix.lastIndexOf('.'));\n\n                var ctrl = this.$control;\n                var evalObj = eval(prefix);\n                this.evaluatePrefix(evalObj, callback);\n                return;\n            }\n\n            prefix = line.substring(0, pos.column).match(/svgnode\\.\\S*/g);\n            if (prefix) {\n                prefix = prefix[prefix.length - 1];\n                prefix = prefix.substring(0, prefix.lastIndexOf('.'));\n\n                var svgnode = this.$control.parentSVG.node\n                var evalObj = eval(prefix);\n                this.evaluatePrefix(evalObj, callback);\n                return;\n            }\n\n            prefix = line.substring(0, pos.column).match(/svgmap\\.\\S*/g);\n            if (prefix) {\n                prefix = prefix[prefix.length - 1];\n                prefix = prefix.substring(0, prefix.lastIndexOf('.'));\n\n                var svgmap = this.$control.svgElements\n                var evalObj = eval(prefix);\n                this.evaluatePrefix(evalObj, callback);\n                return;\n            }\n            if (prefix == '') {\n                var wordList = ['ctrl', 'svgnode', 'svgmap', 'this'];\n\n                callback(null, wordList.map(function (word) {\n                    return {\n                        caption: word,\n                        value: word,\n                        meta: 'Grafana keyword'\n                    };\n                }));\n            }\n        } catch (e) {\n            console.error(\"Autocompleter encountered an error\")\n            console.error(e)\n            callback(null, [])\n        }\n    }\n\n    evaluatePrefix(evalObj, callback) {\n        var wordList = [];\n        for (var key in evalObj) {\n            wordList.push(key);\n        }\n        callback(null, wordList.map(function (word) {\n            return {\n                caption: word + ': ' + (Array.isArray(evalObj[word]) ? 'Array[' + (evalObj[word] || []).length + ']' : typeof evalObj[word]),\n                value: word,\n                meta: \"Grafana keyword\"\n            };\n        }));\n        return;\n    }\n}\n\n\nexport class SVGCtrl extends MetricsPanelCtrl {\n\n    constructor($scope, $injector, $rootScope) {\n        super($scope, $injector);\n        this.$rootScope = $rootScope;\n\n        var panelDefaults = {\n            links: [],\n            datasource: null,\n            maxDataPoints: 3,\n            interval: null,\n            targets: [{}],\n            cacheTimeout: null,\n            nullPointMode: 'connected',\n            aliasColors: {},\n            format: 'short',\n\n            svg_data: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" viewBox=\"0 0 1000 1000\" ></svg>',\n            js_code: '',\n            js_init_code: '',\n            clickMapperEnabled: false,\n            svgIdMappings: [],\n            svgElements: {},\n            editorCompletion: true,\n            svgBuilderData: {\n                width: '100%',\n                height: '100%',\n                viewport: {\n                    x: 0,\n                    y: 0,\n                    width: 1000,\n                    height: 1000\n                },\n                elements: []\n            }\n        };\n\n        _.defaults(this.panel, panelDefaults);\n        this.dataFormat = 'series';\n\n        this.events.on(PanelEvents.render, this.onRender.bind(this));\n        this.events.on(PanelEvents.refresh, this.onRender.bind(this));\n        this.events.on(PanelEvents.dataReceived, this.onDataReceived.bind(this));\n        this.events.on(PanelEvents.dataError, this.onDataError.bind(this));\n        this.events.on(PanelEvents.dataSnapshotLoad, this.onDataReceived.bind(this));\n        this.events.on(PanelEvents.editModeInitialized, this.onInitEditMode.bind(this));\n\n        this.initialized = 0;\n        this.editors = {};\n\n    }\n\n    onInitEditMode() {\n        this.addEditorTab('SVG', 'public/plugins/aceiot-svg-panel/editor_svg.html', 3);\n        this.addEditorTab('Events', 'public/plugins/aceiot-svg-panel/editor_events.html', 4);\n        this.addEditorTab('SVG ID Mapper', 'public/plugins/aceiot-svg-panel/editor_mapper.html', 5);\n        this.unitFormats = kbn.getUnitFormats();\n        this.aceLangTools = ace.acequire(\"ace/ext/language_tools\");\n        this.aceLangTools.addCompleter(new GrafanaJSCompleter(this.aceLangTools, this, this.panel));\n    }\n\n    doShowAceJs(nodeId) {\n        setTimeout(function () {\n            if ($('#' + nodeId).length === 1) {\n                this.editors[nodeId] = ace.edit(nodeId);\n                $('#' + nodeId).attr('id', nodeId + '_initialized');\n                this.editors[nodeId].setValue(this.panel[nodeId], 1);\n                this.editors[nodeId].getSession().on('change', function () {\n                    var val = this.editors[nodeId].getSession().getValue();\n                    this.panel[nodeId] = val;\n                    try {\n                        this.setInitFunction();\n                        this.setHandleMetricFunction();\n                        this.render();\n                    } catch (err) {\n                        console.error(err);\n                    }\n                }.bind(this));\n                this.editors[nodeId].setOptions({\n                    enableBasicAutocompletion: true,\n                    enableLiveAutocompletion: this.panel.editorCompletion,\n                    theme: 'ace/theme/tomorrow_night_bright',\n                    mode: 'ace/mode/javascript',\n                    showPrintMargin: false\n                });\n            }\n        }.bind(this), 100);\n        return true;\n    }\n\n    doShowAceSvg(nodeId) {\n        setTimeout(function () {\n            if ($('#' + nodeId).length === 1) {\n                this.editors[nodeId] = ace.edit(nodeId);\n                $('#' + nodeId).attr('id', nodeId + '_initialized');\n                this.editors[nodeId].setValue(this.panel[nodeId], 1);\n                this.editors[nodeId].getSession().on('change', function () {\n                    var val = this.editors[nodeId].getSession().getValue();\n                    this.panel[nodeId] = val;\n                    try {\n                        this.resetSVG();\n                        this.render();\n                    } catch (err) {\n                        console.error(err);\n                    }\n                }.bind(this));\n                this.editors[nodeId].setOptions({\n                    enableBasicAutocompletion: true,\n                    enableLiveAutocompletion: this.panel.editorCompletion,\n                    readOnly: this.panel.useSVGBuilder,\n                    theme: 'ace/theme/tomorrow_night_bright',\n                    mode: 'ace/mode/svg',\n                    showPrintMargin: false\n                });\n            }\n        }.bind(this), 100);\n        return true;\n    }\n    removeSvgIdMapping(svgIdMapping) {\n        for (let i = 0; i < this.panel.svgIdMappings.length; i++) {\n            if (svgIdMapping.svgId === this.panel.svgIdMappings[i].svgId) {\n                this.panel.svgIdMappings.splice(i, 1);\n                this.updateMappings();\n            }\n        }\n    }\n    svgClickHandler(event) {\n        if (this.panel.clickMapperEnabled) {\n            let clicked = event.target;\n            while (clicked.id === '') {\n                clicked = clicked.parentNode;\n            }\n            for (let i = 0; i < this.panel.svgIdMappings.length; i++) {\n                if (this.panel.svgIdMappings[i].svgId === clicked.id) {\n                    return\n                }\n            }\n            this.panel.svgIdMappings.push(\n                { 'svgId': clicked.id, 'mappedName': '' }\n            )\n            this.$rootScope.$apply();\n        }\n    }\n    addManualSvgIdMapping(svgIdMapping) {\n        this.panel.svgIdMappings.push(\n            svgIdMapping\n        )\n    }\n    uploadSVG(event) {\n        let target = event.currentTarget;\n        let file = target.files[0];\n        let reader = new FileReader();\n        if (target.files && file) {\n            reader.onload = function (event) {\n                this.panel.svg_data = event.target.result;\n                this.resetSVG();\n            }\n        }\n\n    }\n    updateClickMapper() {\n        // console.log(this.panel.clickMapperEnabled);\n        if (this.panel.clickMapperEnabled) {\n            // document.getElementsByClassName('svg-object')[0].addEventListener('click', this.svgClickHandler.bind(this), false);\n            document.getElementsByClassName('svg-object')[0].onclick = this.svgClickHandler.bind(this);\n        } else {\n            // document.getElementsByClassName('svg-object')[0].removeEventListener('click', this.svgClickHandler.bind(this), false);\n            document.getElementsByClassName('svg-object')[0].onclick = null\n        }\n    }\n    updateMappings() {\n        this.resetSVG();\n        this.render();\n    }\n\n    setUnitFormat(subItem) {\n        this.panel.format = subItem.value;\n        this.render();\n    }\n\n    onDataError() {\n        this.data = [];\n        this.render();\n    }\n\n    changeSeriesColor(series, color) {\n        series.color = color;\n        this.panel.aliasColors[series.alias] = series.color;\n        this.render();\n    }\n\n    doInit(ctrl, svgnode) {\n        try {\n            ctrl.panel.doInitUserFunction(ctrl, svgnode, ctrl.svgElements);\n        } catch (error) {\n            console.error(`Failed to run provided user init code, check code for errors and try again. Error: ${error}`)\n        }\n    }\n\n    handleMetric(ctrl, svgnode) {\n        try {\n            ctrl.panel.handleMetricUserFunction(ctrl, svgnode, ctrl.svgElements);\n        } catch (error) {\n            console.error(`Failed to run provided user event code, check code for errors and try again. Error: ${error}`)\n        }\n    }\n\n    setHandleMetricFunction() {\n        this.panel.handleMetricUserFunction = Function('ctrl', 'svgnode', 'svgmap', this.panel.js_code);\n        this.panel.handleMetric = this.handleMetric;\n    }\n\n    setInitFunction() {\n        this.initialized = 0;\n        this.panel.doInitUserFunction = Function('ctrl', 'svgnode', 'svgmap', this.panel.js_init_code);\n        this.panel.doInit = this.doInit;\n    }\n\n    onRender() {\n        if (!_.isFunction(this.panel.handleMetric)) {\n            this.setHandleMetricFunction();\n        }\n\n        if (!_.isFunction(this.panel.doInit)) {\n            this.setInitFunction();\n        }\n    }\n    handleDataFrame(data) {\n        this.dataFrame = data;\n    }\n\n    onDataReceived(dataList) {\n        this.data = [];\n\n        if (dataList.length > 0 && dataList[0].type === 'table') {\n            this.data = dataList.map(this.tableHandler.bind(this));\n            this.table = this.data; // table should be regarded as deprecated\n        } else if (dataList.length > 0 && dataList[0].type === 'docs') {\n            this.data = dataList.map(this.docsHandler.bind(this));\n        } else {\n            this.data = dataList.map(this.seriesHandler.bind(this));\n            this.series = this.data; // series should be regarded as deprectated\n        }\n\n        this.render();\n    }\n\n    resetSVG() {\n        this.initialized = 0;\n    }\n\n    seriesHandler(seriesData) {\n        const series = new TimeSeries({\n            datapoints: seriesData.datapoints,\n            alias: seriesData.target\n        });\n\n        series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n        return series;\n    }\n\n\n    docsHandler(seriesData) {\n        return seriesData;\n    }\n\n    tableHandler(tableData) {\n\n        const columnNames = tableData.columns.map(column => column.text);\n\n        const rows = tableData.rows.map(row => {\n            const datapoint = {};\n\n            row.forEach((value, columnIndex) => {\n                const key = columnNames[columnIndex];\n                datapoint[key] = value;\n            });\n\n            return datapoint;\n        });\n\n        return { columnNames: columnNames, rows: rows };\n    }\n\n    getSeriesIdByAlias(aliasName) {\n        for (var i = 0; i < this.data.length; i++) {\n            if (this.data[i].alias == aliasName) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    getSeriesElementByAlias(aliasName) {\n        var i = this.getSeriesIdByAlias(aliasName);\n        if (i >= 0) {\n            return this.data[i];\n        }\n        return null;\n    }\n\n    getDecimalsForValue(value) {\n        if (_.isNumber(this.panel.decimals)) {\n            return { decimals: this.panel.decimals, scaledDecimals: null };\n        }\n\n        var delta = value / 2;\n        var dec = -Math.floor(Math.log(delta) / Math.LN10);\n\n        var magn = Math.pow(10, -dec);\n        var norm = delta / magn; // norm is between 1.0 and 10.0\n        var size;\n\n        if (norm < 1.5) {\n            size = 1;\n        } else if (norm < 3) {\n            size = 2;\n            // special case for 2.5, requires an extra decimal\n            if (norm > 2.25) {\n                size = 2.5;\n                ++dec;\n            }\n        } else if (norm < 7.5) {\n            size = 5;\n        } else {\n            size = 10;\n        }\n\n        size *= magn;\n\n        // reduce starting decimals if not needed\n        if (Math.floor(value) === value) {\n            dec = 0;\n        }\n\n        var result = {};\n        result.decimals = Math.max(0, dec);\n        result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\n\n        return result;\n    }\n\n    formatValue(value) {\n        var decimalInfo = this.getDecimalsForValue(value);\n        var formatFunc = kbn.valueFormats[this.panel.format];\n        if (formatFunc) {\n            return formatFunc(value, decimalInfo.decimals, decimalInfo.scaledDecimals);\n        }\n        return value;\n    }\n\n    formatValueWithFormatter(value, formatter) {\n        var decimalInfo = this.getDecimalsForValue(value);\n        var formatFunc = kbn.valueFormats[formatter];\n        if (formatFunc) {\n            return formatFunc(value, decimalInfo.decimals, decimalInfo.scaledDecimals);\n        }\n        return value;\n    }\n\n    link(scope, elem, attrs, ctrl) {\n        rendering(scope, elem, attrs, ctrl);\n    }\n}\n\nSVGCtrl.templateUrl = 'module.html';"]}