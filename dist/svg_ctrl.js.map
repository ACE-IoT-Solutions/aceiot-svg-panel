{"version":3,"sources":["../src/svg_ctrl.js"],"names":["MetricsPanelCtrl","_","kbn","TimeSeries","rendering","SVGDemos","Snap","ace","SVGCtrl","$scope","$injector","$rootScope","panelDefaults","links","datasource","maxDataPoints","interval","targets","cacheTimeout","nullPointMode","aliasColors","format","svg_data","js_code","js_init_code","useSVGBuilder","svgBuilderData","width","height","viewport","x","y","elements","defaults","panel","events","on","onRender","bind","onDataReceived","onDataError","onInitEditMode","demos","initialized","addEditorTab","prepareEditor","unitFormats","getUnitFormats","nodeId","setTimeout","$","length","langTools","acequire","editor","edit","attr","getSession","val","getValue","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","theme","mode","subItem","value","render","series","color","alias","handleMetric","Function","doInit","isFunction","setHandleMetricFunction","setInitFunction","dataList","map","seriesHandler","seriesData","datapoints","target","flotpairs","getFlotPairs","aliasName","i","getSeriesIdByAlias","isNumber","decimals","scaledDecimals","delta","dec","Math","floor","log","LN10","magn","pow","norm","size","result","max","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","scope","elem","attrs","ctrl","idx","splice","buildSVG","steps","move","request","XMLHttpRequest","open","addEventListener","event","status","repositories","JSON","parse","responseText","console","warn","statusText","send","newCategories","selectedSVG","selectedRepository","forEach","items","item","includes","category","push","categories","svglist","filter","selectedCategory","svg","name","id","path","rotate","rcenterx","rcentery","scale","all","array","deferred","Deferred","fulfilled","results","resolve","promise","when","then","document","createElementNS","svgNS","namespaceURI","setAttribute","promises","element","dfd","get","data","svgFragment","g","appendChild","html","documentElement","children","outerHTML","resetSVG","templateUrl"],"mappings":"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","file":"svg_ctrl.js","sourcesContent":["import { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport kbn from 'app/core/utils/kbn';\nimport TimeSeries from 'app/core/time_series';\nimport rendering from './rendering';\nimport { SVGDemos } from './demos';\nimport { Snap } from './node_modules/snapsvg/dist/snap.svg-min.js';\nimport ace from './node_modules/brace/index.js';\nimport './node_modules/brace/ext/language_tools.js';\nimport './node_modules/brace/theme/ambiance.js';\nimport './node_modules/brace/mode/javascript.js';\n\nexport class SVGCtrl extends MetricsPanelCtrl {\n\n    constructor($scope, $injector, $rootScope) {\n        super($scope, $injector);\n        this.$rootScope = $rootScope;\n\n        var panelDefaults = {\n            links: [],\n            datasource: null,\n            maxDataPoints: 3,\n            interval: null,\n            targets: [{}],\n            cacheTimeout: null,\n            nullPointMode: 'connected',\n            aliasColors: {},\n            format: 'short',\n\n            svg_data: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" viewBox=\"0 0 1000 1000\" ></svg>',\n            js_code: '',\n            js_init_code: '',\n            useSVGBuilder: false,\n            svgBuilderData: {\n                width: '100%',\n                height: '100%',\n                viewport : {\n                    x: 0,\n                    y: 0,\n                    width: 1000,\n                    height: 1000\n                },\n                elements: []\n            }\n        };\n\n        _.defaults(this.panel, panelDefaults);\n\n        this.events.on('render', this.onRender.bind(this));\n        this.events.on('refresh', this.onRender.bind(this));\n        this.events.on('data-received', this.onDataReceived.bind(this));\n        this.events.on('data-error', this.onDataError.bind(this));\n        this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n\n        this.demos = new SVGDemos(this);\n        this.initialized = 0;\n    }\n\n    onInitEditMode() {\n        this.addEditorTab('SVG Builder', 'public/plugins/grafana-svg-panel/editor_builder.html', 2);\n        this.addEditorTab('SVG', 'public/plugins/grafana-svg-panel/editor_svg.html', 3);\n        this.addEditorTab('Events', 'public/plugins/grafana-svg-panel/editor_events.html', 4);\n        this.prepareEditor();\n        this.unitFormats = kbn.getUnitFormats();\n    }\n    \n    doshow(nodeId) {\n        setTimeout(function() {\n            if ($('#'+nodeId).length === 1) {\n                var langTools = ace.acequire(\"ace/ext/language_tools\");\n                var editor = ace.edit(nodeId);\n                $('#'+nodeId).attr('id', '');\n                editor.getSession().on('change', function() {\n                    var val = editor.getSession().getValue();\n               //     console.log(val);\n                });\n                editor.setOptions({\n                    enableBasicAutocompletion: true,\n                    enableLiveAutocompletion: true,\n                    theme: 'ace/theme/ambiance',\n                    mode: 'ace/mode/javascript'\n                });\n            }\n        }.bind(this), 100);\n        return true;\n    }\n\n    setUnitFormat(subItem) {\n        this.panel.format = subItem.value;\n        this.render();\n    }\n\n    onDataError() {\n        this.series = [];\n        this.render();\n    }\n\n    changeSeriesColor(series, color) {\n        series.color = color;\n        this.panel.aliasColors[series.alias] = series.color;\n        this.render();\n    }\n\n    setHandleMetricFunction() {\n        this.panel.handleMetric = Function('ctrl', 'svgnode', this.panel.js_code);\n    }\n\n    setInitFunction() {\n        this.initialized = 0;\n        this.panel.doInit = Function('ctrl', 'svgnode', this.panel.js_init_code);\n    }\n\n    onRender() {\n        if (!_.isFunction(this.panel.handleMetric)) {\n            this.setHandleMetricFunction();\n        }\n\n        if (!_.isFunction(this.panel.doInit)) {\n            this.setInitFunction();\n        }\n    }\n\n    onDataReceived(dataList) {\n        this.series = dataList.map(this.seriesHandler.bind(this));\n        this.render();\n    }\n\n    resetSVG() {\n        this.initialized = 0;\n    }\n\n    seriesHandler(seriesData) {\n        var series = new TimeSeries({\n            datapoints: seriesData.datapoints,\n            alias: seriesData.target\n        });\n\n        series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n        return series;\n    }\n\n    getSeriesIdByAlias(aliasName) {\n        for (var i = 0; i < this.series.length; i++) {\n            if (this.series[i].alias == aliasName) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    getSeriesElementByAlias(aliasName) {\n        var i = this.getSeriesIdByAlias(aliasName);\n        if (i >= 0) {\n            return this.series[i];\n        }\n        return null;\n    }\n\n    getDecimalsForValue(value) {\n        if (_.isNumber(this.panel.decimals)) {\n            return { decimals: this.panel.decimals, scaledDecimals: null };\n        }\n\n        var delta = value / 2;\n        var dec = -Math.floor(Math.log(delta) / Math.LN10);\n\n        var magn = Math.pow(10, -dec);\n        var norm = delta / magn; // norm is between 1.0 and 10.0\n        var size;\n\n        if (norm < 1.5) {\n            size = 1;\n        } else if (norm < 3) {\n            size = 2;\n            // special case for 2.5, requires an extra decimal\n            if (norm > 2.25) {\n                size = 2.5;\n                ++dec;\n            }\n        } else if (norm < 7.5) {\n            size = 5;\n        } else {\n            size = 10;\n        }\n\n        size *= magn;\n\n        // reduce starting decimals if not needed\n        if (Math.floor(value) === value) { dec = 0; }\n\n        var result = {};\n        result.decimals = Math.max(0, dec);\n        result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\n\n        return result;\n    }\n\n    formatValue(value) {\n        var decimalInfo = this.getDecimalsForValue(value);\n        var formatFunc = kbn.valueFormats[this.panel.format];\n        if (formatFunc) {\n            return formatFunc(value, decimalInfo.decimals, decimalInfo.scaledDecimals);\n        }\n        return value;\n    }\n\n    link(scope, elem, attrs, ctrl) {\n        rendering(scope, elem, attrs, ctrl);\n    }\n\n    removeElement(idx) {\n        this.panel.svgBuilderData.elements.splice(idx, 1);\n        this.buildSVG();\n    }\n\n    moveElement(idx, steps) {\n        this.panel.svgBuilderData.elements = _.move(this.panel.svgBuilderData.elements, idx, idx + steps);\n        this.buildSVG();\n    }\n\n    prepareEditor() {\n        var request = new XMLHttpRequest();\n        \n        request.open(\"GET\",\"public/plugins/grafana-svg-panel/assets/repositories.json\");\n        request.addEventListener('load', (event) => {\n           if (request.status >= 200 && request.status < 300) {\n              this.panel.repositories = JSON.parse(request.responseText);\n           } else {\n              console.warn(request.statusText, request.responseText);\n           }\n        });\n        request.send();\n    }\n\n    repositorySelected() {\n        let newCategories = [];\n        this.panel.selectedSVG = null;\n        \n        if (this.panel.repositories[this.panel.selectedRepository]) {\n            _.forEach(this.panel.repositories[this.panel.selectedRepository].items, \n                (item) => {\n                    if (!_.includes(newCategories, item.category)) {\n                        newCategories.push(item.category);\n                }\n            })\n        }\n\n        this.panel.categories = newCategories;\n    }\n\n    categorySelected() {\n        this.panel.svglist = [];\n        this.panel.selectedSVG = null;\n\n        if (this.panel.repositories[this.panel.selectedRepository]) {\n            this.panel.svglist = _.filter(this.panel.repositories[this.panel.selectedRepository].items, \n                (item) => item.category === this.panel.selectedCategory);\n        }\n    }\n\n    addSVGItem() {\n        let svg = JSON.parse(this.panel.selectedSVG);\n\n        this.panel.svgBuilderData.elements.push(\n            {\n                name: svg.name, \n                id: svg.name,\n                path: svg.path,\n                x: 0,\n                y: 0,\n                rotate: 0,\n                rcenterx: 0,\n                rcentery: 0,\n                scale: 1\n            }\n        )\n        this.buildSVG();\n    }\n\n    buildSVG() {\n        var all = function(array){\n            var deferred = $.Deferred();\n            var fulfilled = 0, length = array.length;\n            var results = [];\n        \n            if (length === 0) {\n                deferred.resolve(results);\n            } else {\n                array.forEach(function(promise, i){\n                    $.when(promise()).then(function(value) {\n                        results[i] = value;\n                        fulfilled++;\n                        if(fulfilled === length){\n                            deferred.resolve(results);\n                        }\n                    });\n                });\n            }\n        \n            return deferred.promise();\n        };\n\n        let panel = this.panel;\n        if (panel.useSVGBuilder) {\n            let svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n            let svgNS = svg.namespaceURI;\n\n            svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n            svg.setAttribute('width', panel.svgBuilderData.width);\n            svg.setAttribute('height', panel.svgBuilderData.height);\n            svg.setAttribute('viewBox',  panel.svgBuilderData.viewport.x + ' ' +\n                                        panel.svgBuilderData.viewport.y + ' ' +\n                                        panel.svgBuilderData.viewport.width + ' ' +\n                                        panel.svgBuilderData.viewport.height);\n            \n            let promises = [];\n\n            panel.svgBuilderData.elements.forEach((element) => {\n                promises.push(() => {\n                    return $.Deferred((dfd) => {\n                        $.get('public/plugins/grafana-svg-panel/assets/' + element.path, (data) => {\n                           dfd.resolve(data);\n                        });\n                    }).promise();\n                });\n            });\n\n            $.when(all(promises)).then(results => {\n                results.forEach(\n                    (svgFragment, i) => {\n                        let g = document.createElementNS(svgNS, 'g');\n                        g.setAttribute('id', panel.svgBuilderData.elements[i].id)\n                        g.setAttribute('transform', 'translate(' + panel.svgBuilderData.elements[i].x + ' ' + panel.svgBuilderData.elements[i].y +') '+\n                                                    'rotate(' + panel.svgBuilderData.elements[i].rotate + ' ' + panel.svgBuilderData.elements[i].rcenterx + ' ' + panel.svgBuilderData.elements[i].rcentery +') '+\n                                                    'scale(' + panel.svgBuilderData.elements[i].scale + ')');\n                        svg.appendChild(g);\n                        $(g).html(svgFragment.documentElement.children); \n                    }\n                )\n                panel.svg_data = svg.outerHTML;\n                this.resetSVG();\n                this.render();\n            });\n        }\n    }\n\n}\n\nSVGCtrl.templateUrl = 'module.html';"]}