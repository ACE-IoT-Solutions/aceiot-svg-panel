{"version":3,"sources":["../src/svg_ctrl.js"],"names":["MetricsPanelCtrl","_","kbn","TimeSeries","rendering","SVGDemos","Snap","SVGCtrl","$scope","$injector","$rootScope","panelDefaults","links","datasource","maxDataPoints","interval","targets","cacheTimeout","nullPointMode","aliasColors","format","valueName","svg_data","js_code","js_init_code","defaults","panel","events","on","onRender","bind","onDataReceived","onDataError","onInitEditMode","demos","initialized","addEditorTab","unitFormats","getUnitFormats","subItem","value","render","series","color","alias","handleMetric","Function","doInit","setHandleMetricFunction","setInitFunction","data","parseSeries","map","serie","i","label","stats","colors","dataList","seriesHandler","seriesData","datapoints","target","flotpairs","getFlotPairs","isNumber","decimals","scaledDecimals","delta","dec","Math","floor","log","LN10","magn","pow","norm","size","result","max","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","scope","elem","attrs","ctrl","templateUrl"],"mappings":"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","file":"svg_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport kbn from 'app/core/utils/kbn';\nimport TimeSeries from 'app/core/time_series';\nimport rendering from './rendering';\nimport {SVGDemos} from './demos';\nimport {Snap} from 'https://cdnjs.cloudflare.com/ajax/libs/snap.svg/0.4.1/snap.svg-min.js';\n\nexport class SVGCtrl extends MetricsPanelCtrl {\n\n  constructor($scope, $injector, $rootScope) {\n    super($scope, $injector);\n    this.$rootScope = $rootScope;\n\n    var panelDefaults = {\n      links: [],\n      datasource: null,\n      maxDataPoints: 3,\n      interval: null,\n      targets: [{}],\n      cacheTimeout: null,\n      nullPointMode: 'connected',\n      aliasColors: {},\n      format: 'short',\n      valueName: 'current',\n      \n      svg_data: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" viewBox=\"0 0 1000 1000\" ></svg>',\n      js_code: '',\n      js_init_code: ''\n    };\n\n    _.defaults(this.panel, panelDefaults);\n\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    \n    this.demos = new SVGDemos(this);\n    this.initialized = 0;\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/plugins/grafana-svg-panel/editor.html', 2);\n    this.unitFormats = kbn.getUnitFormats();\n  }\n\n  setUnitFormat(subItem) {\n    this.panel.format = subItem.value;\n    this.render();\n  }\n\n  onDataError() {\n    this.series = [];\n    this.render();\n  }\n\n  changeSeriesColor(series, color) {\n    series.color = color;\n    this.panel.aliasColors[series.alias] = series.color;\n    this.render();\n  }\n  \n  setHandleMetricFunction() {\n    this.panel.handleMetric = Function ('ctrl', 'svgnode', this.panel.js_code);\n  }\n  \n  setInitFunction() {\n\tthis.initialized = 0;\n    this.panel.doInit = Function ('ctrl', 'svgnode', this.panel.js_init_code);\n  }\n\n  onRender() {    \n    if (!this.panel.handleMetric) {\n      this.setHandleMetricFunction();\n    }\n    \n    if (!this.panel.doInit) {\n      this.setInitFunction();\n    }\n    \n    this.data = this.parseSeries(this.series);\n  }\n\n  parseSeries(series) {\n    return _.map(this.series, (serie, i) => {\n      return {\n        label: serie.alias,\n        data: serie.stats[this.panel.valueName],\n        color: this.panel.aliasColors[serie.alias] || this.$rootScope.colors[i]\n      };\n    });\n  }\n\n  onDataReceived(dataList) {\n    this.series = dataList.map(this.seriesHandler.bind(this));\n    this.data = this.parseSeries(this.series);\n    this.render(this.data);\n  }\n\n  resetSVG() {\n\tthis.initialized = 0;\n  }  \n\n  seriesHandler(seriesData) {\n    var series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: seriesData.target\n    });\n\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n    return series;\n  }\n\n  getDecimalsForValue(value) {\n    if (_.isNumber(this.panel.decimals)) {\n      return { decimals: this.panel.decimals, scaledDecimals: null };\n    }\n\n    var delta = value / 2;\n    var dec = -Math.floor(Math.log(delta) / Math.LN10);\n\n    var magn = Math.pow(10, -dec);\n    var norm = delta / magn; // norm is between 1.0 and 10.0\n    var size;\n\n    if (norm < 1.5) {\n      size = 1;\n    } else if (norm < 3) {\n      size = 2;\n      // special case for 2.5, requires an extra decimal\n      if (norm > 2.25) {\n        size = 2.5;\n        ++dec;\n      }\n    } else if (norm < 7.5) {\n      size = 5;\n    } else {\n      size = 10;\n    }\n\n    size *= magn;\n\n    // reduce starting decimals if not needed\n    if (Math.floor(value) === value) { dec = 0; }\n\n    var result = {};\n    result.decimals = Math.max(0, dec);\n    result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\n\n    return result;\n  }\n\n  formatValue(value) {\n    var decimalInfo = this.getDecimalsForValue(value);\n    var formatFunc = kbn.valueFormats[this.panel.format];\n    if (formatFunc) {\n      return formatFunc(value, decimalInfo.decimals, decimalInfo.scaledDecimals);\n    }\n    return value;\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    rendering(scope, elem, attrs, ctrl);\n  }\n  \n}\n\nSVGCtrl.templateUrl = 'module.html';\n"]}